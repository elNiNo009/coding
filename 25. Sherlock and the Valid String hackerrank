#include <bits/stdc++.h>

using namespace std;
const int CHARS = 26;
// Complete the isValid function below.
string isValid(string str) {
  int freq[26] = {0};

  // freq[] : stores the  frequency of each
  // character of a string
  for (int i = 0; i < str.length(); i++)
    freq[str[i] - 'a']++;
//cout<<freq['a'-'a'];
  // Find first character with non-zero frequency
  int i, freq1 = 0, count_freq1 = 0;
  for (i = 0; i < 26; i++) {
    if (freq[i] != 0) {
      freq1 = freq[i];
      count_freq1 = 1;
      break;
    }
  }

  // Find a character with frequency different
  // from freq1.
  int j, freq2 = 0, count_freq2 = 0;
  for (j = i + 1; j < CHARS; j++) {
    if (freq[j] != 0) {
      if (freq[j] == freq1)
        count_freq1++;
      else {
        count_freq2 = 1;
        freq2 = freq[j];
        break;
      }
    }
  }

  // If we find a third non-zero frequency
  // or count of both frequencies become more
  // than 1, then return false
  //cout<<freq1<<freq2;
  for (int k = j + 1; k < CHARS; k++)
   {
    if (freq[k] != 0) 
    {
      if (freq[k] == freq1)
        count_freq1++;
       else if (freq[k] == freq2)
        count_freq2++;
      else // If we find a third non-zero freq
      {
       //  cout<<freq[k];
       // cout << "enter";
        return "NO";
    }
    }

    // If counts of both frequencies is more than 1
    if ((count_freq1 > 1 && count_freq2 > 1) )
   { 
       return "NO";
   }
   if(abs(freq1-freq2)>1) 
   {
       if(freq1==1)
    {
        if(count_freq1==1)
    return "YES";
    
     } 
     if(freq2==1)
    {
        if(count_freq2==1)
    return "YES";
    
     }  
     }
       if(abs(freq1-freq2)>1)
   return "NO";
   }

  // Return true if we reach here
  return "YES";
}


int main() {
  ofstream fout(getenv("OUTPUT_PATH"));

  string s;
  getline(cin, s);

  string result = isValid(s);

  fout << result << "\n";

  fout.close();

  return 0;
}
